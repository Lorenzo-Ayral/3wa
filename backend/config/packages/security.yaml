# api/config/packages/security.yaml
security:
  # https://symfony.com/doc/current/security.html#c-hashing-passwords
  password_hashers:
    App\Entity\User: 'auto'

  # https://symfony.com/doc/current/security/authenticator_manager.html
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    users:
      entity:
        class: App\Entity\User
        property: username
      # document:
      #    class: App\Document\User
      #    property: email

  firewalls:
    dev:
      pattern: ^/_(profiler|wdt)
      security: false
    login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: api_login
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    api:
      pattern:   ^/api
      stateless: true
      jwt: ~

      # activate different ways to authenticate

      # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
      # http_basic: true
      # https://symfony.com/doc/current/security/form_login_setup.html
      # form_login: true
      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true
#    main:
#      stateless: true
#      provider: users
#      json_login:
#        check_path: api_login
#        username_path: username
#        password_path: password
#        success_handler: lexik_jwt_authentication.handler.authentication_success
#        failure_handler: lexik_jwt_authentication.handler.authentication_failure
#      jwt: ~

  access_control:
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/posts,   roles: PUBLIC_ACCESS }
    - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
#  access_control:
#      - { path: ^/api/login, roles: PUBLIC_ACCESS }
#      - { path: ^/api/doc, roles: PUBLIC_ACCESS }
#      - { path: ^/api, roles: PUBLIC_ACCESS }
#      - { path: ^/api/, roles: IS_AUTHENTICATED_FULLY }
#    # - { path: ^/admin, roles: ROLE_ADMIN }
#    # - { path: ^/profile, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
